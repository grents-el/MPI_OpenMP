#include <stdio.h>
#include <mpi.h>
#include <math.h>

// вычисляем функцию f(x)
double f(double x) {
    return (1 / (sqrt(x) * (exp(0.9 * x) + 3)));
}

// метод левых прямоугольников
double left_rectangle_integral(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = 0.0;
    for (int i = 0; i < n; ++i) {
        double x = a + i * h;
        sum += f(x); // сумируем значение 
    }
    return h * sum; // итоговое интегральное значение
}

int main(int argc, char** argv) {
    int rank, size;
    double a = 0.5, b = 2.0;
    int n = 100000000; 
    double integral, st, fin;
    
    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    
    st = MPI_Wtime();
    
    // каждый процесс вычисляет свой локольный интеграл 
    double local_integral = left_rectangle_integral(a + rank * (b - a) / size, a + (rank + 1) * (b - a) / size, n/size);
    
    
    MPI_Reduce(&local_integral, &integral, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);
    
    fin = MPI_Wtime();
    
    if (rank == 0) {
        printf("Integral: %.10lf, Time: %.10lf seconds\n", integral, fin - st);
    }
    
    MPI_Finalize();
    return 0;
}